// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: control-plane.proto

package control_plane

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	common "github.com/kulycloud/protocol/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RegisterComponentResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterComponentResult) Reset() {
	*x = RegisterComponentResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_plane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterComponentResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterComponentResult) ProtoMessage() {}

func (x *RegisterComponentResult) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterComponentResult.ProtoReflect.Descriptor instead.
func (*RegisterComponentResult) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{0}
}

type RegisterComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Endpoint *common.Endpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *RegisterComponentRequest) Reset() {
	*x = RegisterComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_control_plane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterComponentRequest) ProtoMessage() {}

func (x *RegisterComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterComponentRequest.ProtoReflect.Descriptor instead.
func (*RegisterComponentRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterComponentRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RegisterComponentRequest) GetEndpoint() *common.Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

var File_control_plane_proto protoreflect.FileDescriptor

var file_control_plane_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x55,
	0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x5a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x75, 0x6c, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_control_plane_proto_rawDescOnce sync.Once
	file_control_plane_proto_rawDescData = file_control_plane_proto_rawDesc
)

func file_control_plane_proto_rawDescGZIP() []byte {
	file_control_plane_proto_rawDescOnce.Do(func() {
		file_control_plane_proto_rawDescData = protoimpl.X.CompressGZIP(file_control_plane_proto_rawDescData)
	})
	return file_control_plane_proto_rawDescData
}

var file_control_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_control_plane_proto_goTypes = []interface{}{
	(*RegisterComponentResult)(nil),  // 0: RegisterComponentResult
	(*RegisterComponentRequest)(nil), // 1: RegisterComponentRequest
	(*common.Endpoint)(nil),          // 2: Endpoint
}
var file_control_plane_proto_depIdxs = []int32{
	2, // 0: RegisterComponentRequest.endpoint:type_name -> Endpoint
	1, // 1: ControlPlane.RegisterComponent:input_type -> RegisterComponentRequest
	0, // 2: ControlPlane.RegisterComponent:output_type -> RegisterComponentResult
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_control_plane_proto_init() }
func file_control_plane_proto_init() {
	if File_control_plane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_control_plane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterComponentResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_control_plane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_control_plane_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_plane_proto_goTypes,
		DependencyIndexes: file_control_plane_proto_depIdxs,
		MessageInfos:      file_control_plane_proto_msgTypes,
	}.Build()
	File_control_plane_proto = out.File
	file_control_plane_proto_rawDesc = nil
	file_control_plane_proto_goTypes = nil
	file_control_plane_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ControlPlaneClient is the client API for ControlPlane service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControlPlaneClient interface {
	RegisterComponent(ctx context.Context, in *RegisterComponentRequest, opts ...grpc.CallOption) (*RegisterComponentResult, error)
}

type controlPlaneClient struct {
	cc grpc.ClientConnInterface
}

func NewControlPlaneClient(cc grpc.ClientConnInterface) ControlPlaneClient {
	return &controlPlaneClient{cc}
}

func (c *controlPlaneClient) RegisterComponent(ctx context.Context, in *RegisterComponentRequest, opts ...grpc.CallOption) (*RegisterComponentResult, error) {
	out := new(RegisterComponentResult)
	err := c.cc.Invoke(ctx, "/ControlPlane/RegisterComponent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControlPlaneServer is the server API for ControlPlane service.
type ControlPlaneServer interface {
	RegisterComponent(context.Context, *RegisterComponentRequest) (*RegisterComponentResult, error)
}

// UnimplementedControlPlaneServer can be embedded to have forward compatible implementations.
type UnimplementedControlPlaneServer struct {
}

func (*UnimplementedControlPlaneServer) RegisterComponent(context.Context, *RegisterComponentRequest) (*RegisterComponentResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterComponent not implemented")
}

func RegisterControlPlaneServer(s *grpc.Server, srv ControlPlaneServer) {
	s.RegisterService(&_ControlPlane_serviceDesc, srv)
}

func _ControlPlane_RegisterComponent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterComponentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlPlaneServer).RegisterComponent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ControlPlane/RegisterComponent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlPlaneServer).RegisterComponent(ctx, req.(*RegisterComponentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControlPlane_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ControlPlane",
	HandlerType: (*ControlPlaneServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterComponent",
			Handler:    _ControlPlane_RegisterComponent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control-plane.proto",
}
