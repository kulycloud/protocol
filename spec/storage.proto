syntax = "proto3";

option go_package = "github.com/kulycloud/protocol/storage;storage";

import "common.proto";

service Storage {
  // Routes
  rpc SetRoute(SetRouteRequest) returns (SetRouteResponse);
  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse);
  rpc GetRouteStep(GetRouteStepRequest) returns (GetRouteStepResponse);
  rpc GetPopulatedRouteStep(GetRouteStepRequest) returns (GetPopulatedRouteStepResponse);
  rpc GetRouteStart(GetRouteStartRequest) returns (GetRouteStartResponse);
  rpc GetRoutesInNamespace(GetRoutesInNamespaceRequest) returns (GetRoutesInNamespaceResponse);
  rpc DeleteRoute(DeleteRouteRequest) returns (Empty);

  // Services
  rpc SetService(SetServiceRequest) returns (Empty);
  rpc GetService(GetServiceRequest) returns (GetServiceResponse);
  rpc GetServicesInNamespace(GetServicesInNamespaceRequest) returns (GetServicesInNamespaceResponse);
  rpc DeleteService(DeleteServiceRequest) returns (Empty);

  // Endpoints
  rpc GetServiceLBEndpoints(NamespacedName) returns (EndpointList);
  rpc SetServiceLBEndpoints(SetServiceLBEndpointsRequest) returns (Empty);
}

message NamespacedName {
  string namespace = 1;
  string name = 2;
}

// --------------------------------
// ROUTES
// --------------------------------

message SetRouteRequest {
  NamespacedName namespacedName = 1;
  Route data = 3;
}

message SetRouteResponse {
  string uid = 1;
}

message GetRouteRequest {
  oneof id {
    NamespacedName namespacedName = 1;
    string uid = 2;
  };
}

message DeleteRouteRequest {
  NamespacedName namespacedName = 1;
}


message GetRouteResponse {
  RouteWithId route = 1;
}

message GetRouteStepRequest {
  oneof id {
    NamespacedName namespacedName = 1;
    string uid = 2;
  };
  uint32 step_id = 3;
}

message GetRouteStepResponse {
  RouteStep step = 1;
}

message GetPopulatedRouteStepResponse {
  PopulatedRouteStep step = 1;
}

message GetRouteStartRequest {
  string host = 1;
}

message GetRouteStartResponse {
  string uid = 1;
  PopulatedRouteStepReference step = 2;
}

message GetRoutesInNamespaceRequest {
  string namespace = 1;
}

message GetRoutesInNamespaceResponse {
  repeated string routes = 1;
}

message RouteWithId {
  string uid = 1;
  Route route = 2;
}

message Route {
  string host = 2;
  repeated RouteStep steps = 3;
}

message RouteStep {
  NamespacedName service = 1;
  string config = 2;
  string name = 3;
  map<string, uint32> references = 4;
}

message PopulatedRouteStep {
  NamespacedName service = 1;
  string config = 2;
  string name = 3;
  map<string, PopulatedRouteStepReference> references = 4;
}

message PopulatedRouteStepReference {
  uint32 step = 1;
  repeated Endpoint endpoints = 3;
}

// --------------------------------
// SERVICES
// --------------------------------

message SetServiceRequest {
  NamespacedName namespacedName = 1;
  Service service = 2;
}

message GetServiceRequest {
  NamespacedName namespacedName = 1;
}

message DeleteServiceRequest {
  NamespacedName namespacedName = 1;
}

message GetServiceResponse {
  Service service = 1;
}

message GetServicesInNamespaceRequest {
  string namespace = 1;
}

message GetServicesInNamespaceResponse {
  repeated string names = 1;
}

message Service {
  string image = 1;
  string pullSecrets = 2;
  uint32 replicas = 3;
  map<string, string> environment = 4;
  repeated string arguments = 5;
}

// --------------------------------
// ENDPOINTS
// --------------------------------

message SetServiceLBEndpointsRequest {
  NamespacedName serviceName = 1;
  repeated Endpoint endpoints = 2;
}
